import type { NextPage } from "next"
import { useSession, signOut, signIn } from "next-auth/react"
import Head from "next/head"
import { useEffect, useState } from "react"
import { trpc } from "../utils/trpc"

const Home: NextPage = () => {
  const hello = trpc.useQuery(["hello", { text: "from tRPC" }])
  const { data: session, status } = useSession()
  // const exampleData = trpc.useQuery(["example"]);
  // const { invalidateQueries } = trpc.useContext()
  // const createExample = trpc.useMutation("create-example", {
  //   onSuccess: () => invalidateQueries("example"),
  // })

  if (status === "authenticated") {
    console.log(session.user)
  }

  return (
    <>
      <Head>
        <title>Create t3 App</title>
        <meta name="description" content="Generated by create t3 app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex flex-col items-center justify-center w-1/2 min-h-screen mx-auto">
        <h1 className="font-extrabold text-center text-7xl">
          Create <span className="text-blue-500">t3</span> App
        </h1>

        <div className="w-fit">
          <h3 className="mt-4 text-3xl">This Stack uses:-</h3>

          <div className="py-6 text-2xl">
            {hello.data ? <p>{hello.data.greeting}</p> : <p>Loading..</p>}
          </div>
          <div className="py-6 text-2xl">
            {/* <h1>Login</h1>
            <input
              type="text"
              placeholder="Username"
              onChange={e => setUsername(e.target.value)}
            />
            <input
              type="password"
              placeholder="Password"
              onChange={e => setPassword(e.target.value)}
            />
            <button
              onClick={() =>
                signIn("credentials", {
                  username: username,
                  password: password,
                })
              }
            >
              Login
            </button> */}
            <button onClick={() => signOut()}>Logout</button>
            {/* {exampleData.data ? (
              <div>
                {exampleData.data.length === 0 ? (
                  <p className="text-2xl">No data available, create new!</p>
                ) : (
                  exampleData.data.map(({ id }) => <p key={id}>{id}</p>)
                )}
              </div>
            ) : (
              <p>Loading...</p>
            )} */}
          </div>
          {/* <button
            onClick={() => createExample.mutate()}
            className="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded"
          >
            Create New Example
          </button> */}
        </div>
      </div>
    </>
  )
}

export default Home
